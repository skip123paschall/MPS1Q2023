{"files":[{"id":"acc911ed-109f-4c66-ab5b-754aebe3066a","name":"appsscript","type":"json","source":"{\n  \"timeZone\": \"America/New_York\",\n  \"dependencies\": {\n  },\n  \"exceptionLogging\": \"STACKDRIVER\",\n  \"runtimeVersion\": \"V8\"\n}"},{"id":"bdc23cbc-a0cb-4d8d-be92-b5614fe0b66d","name":"Code","type":"server_js","source":"// ############################################### //\n// ##### manually set the following 3 values ##### //\n// ############################################### //\n\n// The allowed values for gradeLevel are: K, 1, 2, 3, 4, or 5.\nvar gradeLevel \u003d \"4\";  // The teacher order sheets will be created for this grade level.\n\n// The allowed values for numberOfBuildings are: 1 through 24.\nvar numberOfBuildings \u003d \"24\"; // The teacher order sheets will be created for this number of buildings.\n\n// If you change buildingArr then the allowed values for numberOfBuildings must be changed (see above).\nvar buildingArr \u003d [\"Abbott\", \"Ackerman\", \"Aldrich\", \"Black Elk\", \"Bryan\", \"Cody\", \"Cottonwood\", \"Disney\",\n  \"Ezra\", \"Harvey Oaks\", \"Hitchcock\", \"Holling Heights\", \"Montclair\", \"Morton\", \"Neihardt\", \"Norris\", \"Reagan\",\n  \"Reeder\", \"Rockwell\", \"Rohwer\", \"Sandoz\", \"Upchurch\", \"Wheeler\", \"Willowdale\"]\n\n\nfunction copyTemplateToAllBuildings() {\n\n  Logger.log(`Start program to create teacher order sheets grade level ${gradeLevel}.`)\n\n  if (![\"K\", \"1\", \"2\", \"3\", \"4\", \"5\"].includes(gradeLevel)) {\n    Logger.log(\"FATAL ERROR: Invalid gradeLevel: \" + gradeLevel);\n    process.exit(0);\n  }\n\n  if (numberOfBuildings \u003e\u003d 1 \u0026\u0026 numberOfBuildings \u003c\u003d buildingArr.length) {\n    const doNothing \u003d \"\";\n  } else {\n    Logger.log(\"FATAL ERROR: Invalid numberOfBuildings: \" + numberOfBuildings);\n    process.exit(0);\n  }\n\n  let teacherOrderFormTemplateIdArr \u003d [\n    \"Kindergarten Kits Order Sheets\",\n    \"1st Grade Kits Order Sheets\",\n    \"2nd Grade Kits Order Sheets\",\n    \"3rd Grade Kits Order Sheets\",\n    \"4th Grade Kits Order Sheets\",\n    \"5th Grade Kits Order Sheets\"\n  ];\n\n  let orderFormFolderNameArr \u003d [\n    \"Kindergarten\",\n    \"1st Grade\",\n    \"2nd Grade\",\n    \"3rd Grade\",\n    \"4th Grade\",\n    \"5th Grade\"\n  ];\n\n  let gradeLevelTemp \u003d \"\";\n  if (gradeLevel \u003d\u003d \"K\") {\n    gradeLevelTemp \u003d 0;\n  } else if (gradeLevel \u003d\u003d \"1\") {\n    gradeLevelTemp \u003d 1;\n  } else if (gradeLevel \u003d\u003d \"2\") {\n    gradeLevelTemp \u003d 2;\n  } else if (gradeLevel \u003d\u003d \"3\") {\n    gradeLevelTemp \u003d 3;\n  } else if (gradeLevel \u003d\u003d \"4\") {\n    gradeLevelTemp \u003d 4;\n  } else if (gradeLevel \u003d\u003d \"5\") {\n    gradeLevelTemp \u003d 5;\n  } else {\n    Logger.log(\"FATAL ERROR: Fall thru setting gradeLevelTemp. Invalid gradeLevel: \" + gradeLevel);\n    process.exit(0);\n  }\n\n  const orderTotalsSheetsFolderId \u003d DriveApp.getFoldersByName(orderFormFolderNameArr[gradeLevelTemp]).next().getId();\n\n  let totalsSheetsFolderId \u003d DriveApp.getFolderById(orderTotalsSheetsFolderId);\n  const files \u003d totalsSheetsFolderId.getFiles();\n  let ctr \u003d 0;\n  while (files.hasNext()) {\n    const file \u003d files.next();\n    ctr \u003d ctr + 1;\n  }\n  if (ctr \u003e 0) {\n    Logger.log(\"FATAL ERROR: folder \" + orderFormFolderNameArr[gradeLevelTemp] + \" contains teacher order sheet files.\");\n    process.exit(0);\n  }\n\n  let orderFormFolderIdArr \u003d [];\n\n  orderFormFolderNameArr.forEach((val) \u003d\u003e {\n    orderFormFolderIdArr.push(DriveApp.getFoldersByName(val).next().getId());\n  })\n\n  const folderId \u003d orderFormFolderIdArr[gradeLevelTemp];\n\n  const templateId \u003d getFileIdForFileName(teacherOrderFormTemplateIdArr[gradeLevelTemp]);\n\n  const ss \u003d SpreadsheetApp.openById(templateId);\n\n  for (let i \u003d 0; i \u003c numberOfBuildings; i++) {\n    const building \u003d buildingArr[i];\n\n    Logger.log(\"Creating teacher order sheet for: \" + building);\n\n    // Copy template to create a new spreadsheet (will be in MyDrive)\n    ss.copy(building);\n\n    // Put building name into second sheet of newly created spreadsheet\n    const fileId \u003d getFileIdForFileName(building);\n    const ssNew \u003d SpreadsheetApp.openById(fileId);\n    const activeSheet \u003d ssNew.setActiveSheet(ssNew.getSheets()[1]);\n    const targetCell \u003d activeSheet.setActiveSelection(\"C2\");\n    targetCell.setValue(building);\n\n    // Move this newly created spreadsheet to the grade-level folder\n    const file \u003d DriveApp.getFileById(fileId);\n    DriveApp.getFolderById(folderId).addFile(file);\n\n  } // end for loop\n\n} // end function\n\nfunction getFileIdForFileName(building) {\n  //Get the file id of the building order form that was just created\n  var FileIterator \u003d DriveApp.getFilesByName(building);\n  var fileId;\n  while (FileIterator.hasNext()) {\n    var file \u003d FileIterator.next();\n    if (file.getName() \u003d\u003d building) {\n      var Sheet \u003d SpreadsheetApp.open(file);\n      fileId \u003d file.getId();\n      break;\n    }\n  }\n  return fileId;\n}\n"}]}