{"files":[{"id":"08d23d74-2561-418f-b9c6-5040f7928f17","name":"appsscript","type":"json","source":"{\n  \"timeZone\": \"America/New_York\",\n  \"dependencies\": {\n  },\n  \"exceptionLogging\": \"STACKDRIVER\",\n  \"runtimeVersion\": \"V8\"\n}"},{"id":"e191a7bd-d6aa-4ec2-b100-f58086f00b4c","name":"Code","type":"server_js","source":"function run_health_checks() {\n  checkForRequiredFoldersAndFiles();\n  orderFormDupItemNum();\n  itemsTeacherOrderFormVersusTotals();\n}\n\nfunction checkForRequiredFoldersAndFiles() {\n  Logger.log(\"*** Checking if required folders and files exist\")\n\n  const requiredFolders \u003d [\n    \"Amplify Science Admin\",\n    \"Grade-level Order Sheet templates\",\n    \"Grade-level Order Totals\",\n    \"Amplify Science Teacher Order Sheets\",\n    \"1st Grade\",\n    \"2nd Grade\",\n    \"3rd Grade\",\n    \"4th Grade\",\n    \"5th Grade\",\n    \"Kindergarten\"\n  ]\n  requiredFolders.forEach((val) \u003d\u003e {\n    checkForRequiredFolder(val);\n  })\n\n  const requiredFiles \u003d [\n    \"1st Grade Kits Order Sheets\",\n    \"2nd Grade Kits Order Sheets\",\n    \"3rd Grade Kits Order Sheets\",\n    \"4th Grade Kits Order Sheets\",\n    \"5th Grade Kits Order Sheets\",\n    \"Kindergarten Kits Order Sheets\",\n    \"1st Grade Order Totals\",\n    \"2nd Grade Order Totals\",\n    \"3rd Grade Order Totals\",\n    \"4th Grade Order Totals\",\n    \"5th Grade Order Totals\",\n    \"Kindergarten Order Totals\"\n  ]\n  requiredFiles.forEach((val) \u003d\u003e {\n    checkForRequiredFile(val);\n  })\n}\n\nfunction checkForRequiredFolder(folderName) {\n  try {\n    const folderId \u003d DriveApp.getFoldersByName(folderName).next().getId();\n  } catch (e) {\n    Logger.log(`FATAL ERROR: ${folderName} folder not found`);\n    // Logger.log(\"FATAL ERROR: Amplify Science Admin folder not found\");\n    throw new Error(\"exiting program\");\n  }\n}\n\nfunction checkForRequiredFile(fileName) {\n  try {\n    const fileId \u003d DriveApp.getFilesByName(fileName).next().getId();\n  } catch (e) {\n    Logger.log(`FATAL ERROR: ${fileName} file not found`);\n    throw new Error(\"exiting program\");\n  }\n}\n\nfunction createOrderFormsIdArr(orderFormsFolderId) {\n  const files \u003d orderFormsFolderId.getFiles();\n  let orderFormsIdArr \u003d [];\n  while (files.hasNext()) {\n    const file \u003d files.next();\n    orderFormsIdArr.push(file.getId());\n  }\n\n  let orderFormsNameArr \u003d [];\n\n  orderFormsIdArr.forEach((val) \u003d\u003e {\n    let activeFile \u003d DriveApp.getFileById(val);\n    orderFormsNameArr.push(activeFile.getName());\n  })\n\n  let orderFormsSortedByNameIdArr \u003d [];\n\n  orderFormsNameArr.sort().reverse().forEach((val) \u003d\u003e {\n    orderFormsSortedByNameIdArr.push(getFileIdForFileName(val));\n  })\n  return (orderFormsSortedByNameIdArr);\n}\n\nfunction getFileIdForFileName(building) {\n  var FileIterator \u003d DriveApp.getFilesByName(building);\n  var fileId;\n  while (FileIterator.hasNext()) {\n    var file \u003d FileIterator.next();\n    if (file.getName() \u003d\u003d building) {\n      var Sheet \u003d SpreadsheetApp.open(file);\n      fileId \u003d file.getId();\n      break;\n    }\n  }\n  return fileId;\n}\n\nfunction createTotalsSheetIdArr(totalsSheetsFolderId) {\n  const files \u003d totalsSheetsFolderId.getFiles();\n  let totalsSheetIdArr \u003d [];\n  while (files.hasNext()) {\n    const file \u003d files.next();\n    totalsSheetIdArr.push(file.getId());\n  }\n\n  let totalsSheetNameArr \u003d [];\n  totalsSheetIdArr.forEach((val) \u003d\u003e {\n    let activeFile \u003d DriveApp.getFileById(val);\n    totalsSheetNameArr.push(activeFile.getName());\n  })\n\n  let totalsSheetSortedByNameIdArr \u003d [];\n  totalsSheetNameArr.sort().reverse().forEach((val) \u003d\u003e {\n    totalsSheetSortedByNameIdArr.push(getFileIdForFileName(val));\n  })\n  return (totalsSheetSortedByNameIdArr);\n}\n\nfunction orderFormDupItemNum() {\n\n  Logger.log(\"*** Checking teacher order sheet templates for duplicate item numbers within a kit\")\n\n\n  const orderFormsTemplateFolderId \u003d DriveApp.getFoldersByName(\"Grade-level Order Sheet templates\").next().getId();\n\n  orderFormGradeLevelTemplateArr \u003d createOrderFormsIdArr(DriveApp.getFolderById(orderFormsTemplateFolderId));\n\n  let gradeLevelName \u003d \"\";\n  let firstSpace \u003d \"\";\n  for (b \u003d 0; b \u003c orderFormGradeLevelTemplateArr.length; b++) {\n\n    let ss \u003d SpreadsheetApp.openById(orderFormGradeLevelTemplateArr[b]);\n\n    firstSpace \u003d ss.getName().indexOf(\" \");\n    gradeLevelName \u003d ss.getName().substring(0, firstSpace);\n    Logger.log(`--- ${gradeLevelName} grade ---`);\n\n    let sheetsArr \u003d ss.getSheets();\n\n    let notItemNumArr \u003d [\"Classroom Materials\", \"Student Materials\"];\n\n    for (let i \u003d 1; i \u003c (sheetsArr.length); i++) {\n      let activeSheet \u003d sheetsArr[i];\n      let data \u003d activeSheet.getDataRange();\n      let values \u003d data.getValues();\n\n      let ofItemNumArr \u003d [];\n      for (j \u003d 6; j \u003c values.length; j++) {\n        if (notItemNumArr.includes(values[j][0])) {\n          void (0);\n        } else {\n          ofItemNumArr.push(values[j][0]);\n        }\n      }\n      dupItemsArr \u003d ofItemNumArr.filter((e, i, a) \u003d\u003e a.indexOf(e) !\u003d\u003d i);\n      if (dupItemsArr.length \u003e 0) {\n        console.log(`The duplicates in kit \"${sheetsArr[i].getSheetName()}\" are: ${dupItemsArr}`);\n      }\n    }\n  }\n}\n\nfunction itemsTeacherOrderFormVersusTotals() {\n\n  Logger.log(\"*** Checking if item numbers on order sheets match totals sheets and vice versa\")\n\n  const orderFormsTemplateFolderId \u003d DriveApp.getFoldersByName(\"Grade-level Order Sheet templates\").next().getId();\n  const orderTotalsSheetsFolderId \u003d DriveApp.getFoldersByName(\"Grade-level Order Totals\").next().getId();\n\n  orderFormGradeLevelTemplateArr \u003d createOrderFormsIdArr(DriveApp.getFolderById(orderFormsTemplateFolderId));\n  orderTotalGradeLevelArr \u003d createTotalsSheetIdArr(DriveApp.getFolderById(orderTotalsSheetsFolderId));\n\n  let firstSpace \u003d \"\";\n  let gradeLevelName \u003d \"\";\n  for (b \u003d 0; b \u003c orderFormGradeLevelTemplateArr.length; b++) {\n    let orderFormGradeLevelAllItemNumArr \u003d [];\n    let ss \u003d SpreadsheetApp.openById(orderFormGradeLevelTemplateArr[b]);\n    firstSpace \u003d ss.getName().indexOf(\" \");\n    gradeLevelName \u003d ss.getName().substring(0, firstSpace);\n    Logger.log(`--- ${gradeLevelName} grade ---`);\n\n    let sheetsArr \u003d ss.getSheets();\n\n    let notItemNumArr \u003d [\"Classroom Materials\", \"Student Materials\"];\n\n    for (let i \u003d 1; i \u003c (sheetsArr.length); i++) {\n      let activeSheet \u003d sheetsArr[i];\n      let data \u003d activeSheet.getDataRange();\n      let values \u003d data.getValues();\n\n      for (j \u003d 6; j \u003c values.length; j++) {\n        if (notItemNumArr.includes(values[j][0])) {\n          void (0);\n        } else {\n          orderFormGradeLevelAllItemNumArr.push(values[j][0]);\n        }\n      }\n    }\n\n    let fileId \u003d orderTotalGradeLevelArr[b];\n    let ssTot \u003d SpreadsheetApp.openById(fileId);\n    let activeSheetTot \u003d ssTot.setActiveSheet(ssTot.getSheets()[0]);\n    dataTot \u003d activeSheetTot.getDataRange();\n    valuesTot \u003d dataTot.getValues();\n\n    let otItemNumberArr \u003d [];\n\n    valuesTot.forEach((val) \u003d\u003e {\n      if (val[1] !\u003d \"\") {\n        otItemNumberArr.push(val[1]);\n      }\n    })\n    otItemNumberArr.shift();\n\n    Logger.log(\"*** Checking for items on teacher order sheet that are not on order total sheet.\")\n    for (let k \u003d 0; k \u003c orderFormGradeLevelAllItemNumArr.length; k++) {\n      if (otItemNumberArr.includes(orderFormGradeLevelAllItemNumArr[k])) {\n        void (0);\n      } else {\n        Logger.log(\"Item on teacher order sheet not on order totals sheet: \" + orderFormGradeLevelAllItemNumArr[k]);\n      }\n    }\n\n    Logger.log(\"*** Checking for items on order total sheet that are not on teacher order sheet.\")\n    for (let k \u003d 0; k \u003c otItemNumberArr.length; k++) {\n      if (orderFormGradeLevelAllItemNumArr.includes(otItemNumberArr[k])) {\n        void (0);\n      } else {\n        Logger.log(\"Item on totals sheet not on teacher order sheet: \" + otItemNumberArr[k]);\n      }\n    }\n\n  }\n}"}]}