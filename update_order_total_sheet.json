{"files":[{"id":"39d43d9f-003a-4a46-8bf2-cc77304af3df","name":"appsscript","type":"json","source":"{\n  \"timeZone\": \"America/New_York\",\n  \"dependencies\": {\n  },\n  \"exceptionLogging\": \"STACKDRIVER\",\n  \"runtimeVersion\": \"V8\"\n}"},{"id":"90e3d9a7-ff9d-4b7f-acb7-1c367dd38cc2","name":"Code","type":"server_js","source":"// #################################### //\n// ##### manually set grade level ##### //\n// #################################### //\n// gradeLevel must be: K, 1, 2, 3, 4, 5 //\nvar gradeLevel \u003d \"K\";  // The order totals sheet for this grade level will be updated.\n\nfunction run_update_totals_for_a_grade() {\n  // function updateTotalRequested() {\n  Logger.log(`Start program to update Order Totals Google sheet for grade level ${gradeLevel}.`)\n\n  let doNothing \u003d \"\";\n  validGradeLevelArr \u003d [\"K\", \"1\", \"2\", \"3\", \"4\", \"5\"];\n  if (validGradeLevelArr.includes(gradeLevel)) {\n    doNothing \u003d \"\";\n  } else {\n    try {\n      throw \"exit\";\n    } catch (e) {\n      Logger.log(\"EXITING FATAL ERROR: Invalid gradeLevel: \" + gradeLevel);\n    }\n  }\n\n  const orderTotalsFolderId \u003d DriveApp.getFoldersByName(\"Grade-level Order Totals\").next().getId();\n  let gradeLevelTotalsSheetIdArr \u003d createTotalsSheetIdArr(DriveApp.getFolderById(orderTotalsFolderId));\n\n  let gradeLevelTemp \u003d \"\";\n  if (gradeLevel \u003d\u003d \"K\") {\n    gradeLevelTemp \u003d 0;\n  } else if (gradeLevel \u003d\u003d \"5\") {\n    gradeLevelTemp \u003d 1;\n  } else if (gradeLevel \u003d\u003d \"4\") {\n    gradeLevelTemp \u003d 2;\n  } else if (gradeLevel \u003d\u003d \"3\") {\n    gradeLevelTemp \u003d 3;\n  } else if (gradeLevel \u003d\u003d \"2\") {\n    gradeLevelTemp \u003d 4;\n  } else if (gradeLevel \u003d\u003d \"1\") {\n    gradeLevelTemp \u003d 5;\n  } else {\n    Logger.log(\"FATAL ERROR: Fall thru setting gradeLevelTemp. Invalid gradeLevel: \" + gradeLevel);\n    process.exit(0);\n  }\n\n  // fileId is the fileId for the grade-level totals sheet that is being updated in this\n  // run of the program\n  let fileId \u003d gradeLevelTotalsSheetIdArr[gradeLevelTemp];\n\n  const ss \u003d SpreadsheetApp.openById(fileId);\n  const activeSheet \u003d ss.setActiveSheet(ss.getSheets()[0]);\n  data \u003d activeSheet.getDataRange();\n  values \u003d data.getValues();\n\n  let otItemNumberArr \u003d [];\n  values.forEach((val) \u003d\u003e {\n    if (val[1] !\u003d \"\") {\n      otItemNumberArr.push(val[1]);\n    }\n  })\n\n  for (i \u003d 1; i \u003c otItemNumberArr.length; i++) {\n    if (activeSheet.getRange(\"E\" + (i + 1)).getValue() !\u003d \"\") {\n      activeSheet.getRange(\"E\" + (i + 1)).setValue(\"\");\n    }\n  }\n\n  let returnedOrderFormsItemsQtyNeededArr \u003d getOrderFormsTotalQtyNeeded(gradeLevel);\n  Logger.log(`Updating Order Totals Google sheet for grade level ${gradeLevel}.`)\n\n  let orderFormsItemNumberArr \u003d returnedOrderFormsItemsQtyNeededArr[0];\n  let orderFormsTotalQtyNeededArr \u003d returnedOrderFormsItemsQtyNeededArr[1];\n\n  for (let i \u003d 0; i \u003c orderFormsItemNumberArr.length; i++) {\n    orderedItemFoundOnTotalsForm \u003d false;\n\n    for (let j \u003d 0; j \u003c otItemNumberArr.length; j++) {\n      if (orderFormsItemNumberArr[i] \u003d\u003d otItemNumberArr[j]) {\n\n        currentTotalRequested \u003d activeSheet.getRange(\"E\" + (j + 1)).getValue();\n        activeSheet.getRange(\"E\" + (j + 1)).setValue(orderFormsTotalQtyNeededArr[i] + currentTotalRequested);\n        orderedItemFoundOnTotalsForm \u003d true;\n        break;\n      }\n    } // inner for loop\n\n    if (orderedItemFoundOnTotalsForm \u003d\u003d false) {\n      Logger.log(\"Ordered item not found on Order Totals form \" + orderFormsItemNumberArr[i]);\n    }\n\n  } //outer for loop\n\n} // end of function\n\nfunction getFileIdForFileName(building) {\n  //Get the file id of the building order form that was just created\n  var FileIterator \u003d DriveApp.getFilesByName(building);\n  var fileId;\n  while (FileIterator.hasNext()) {\n    var file \u003d FileIterator.next();\n    if (file.getName() \u003d\u003d building) {\n      var Sheet \u003d SpreadsheetApp.open(file);\n      fileId \u003d file.getId();\n      break;\n    }\n  } //end while\n  return fileId;\n}\n\nfunction createTotalsSheetIdArr(totalsSheetsFolderId) {\n  const files \u003d totalsSheetsFolderId.getFiles();\n  let totalsSheetIdArr \u003d [];\n  while (files.hasNext()) {\n    const file \u003d files.next();\n    totalsSheetIdArr.push(file.getId());\n  }\n\n  let totalsSheetNameArr \u003d [];\n  totalsSheetIdArr.forEach((val) \u003d\u003e {\n    let activeFile \u003d DriveApp.getFileById(val);\n    totalsSheetNameArr.push(activeFile.getName());\n  })\n\n  let totalsSheetSortedByNameIdArr \u003d [];\n  totalsSheetNameArr.sort().reverse().forEach((val) \u003d\u003e {\n    totalsSheetSortedByNameIdArr.push(getFileIdForFileName(val));\n  })\n  return (totalsSheetSortedByNameIdArr);\n\n}\n\nfunction createBuildingIdArr(gradeLevelFolderId) {\n  const files \u003d gradeLevelFolderId.getFiles();\n  let buildingIdArr \u003d [];\n  while (files.hasNext()) {\n    const file \u003d files.next();\n    buildingIdArr.push(file.getId());\n  }\n\n  return (buildingIdArr);\n}\n\nfunction createGradeLevelTeacherFolderIdArr() {\n  let orderFormFolderNameArr \u003d [\n    \"Kindergarten\",\n    \"1st Grade\",\n    \"2nd Grade\",\n    \"3rd Grade\",\n    \"4th Grade\",\n    \"5th Grade\"\n  ];\n\n  let orderFormFolderIdArr \u003d [];\n\n  orderFormFolderNameArr.forEach((val) \u003d\u003e {\n    orderFormFolderIdArr.push(folderId \u003d DriveApp.getFoldersByName(val).next().getId());\n  })\n  return (orderFormFolderIdArr);\n\n  // Logger.log(\"orderFormFolderIdArr: \" + orderFormFolderIdArr);\n}\n\nfunction getOrderFormsTotalQtyNeeded(gradeLevel) {\n\n  let gradeLevelTemp2 \u003d gradeLevel;\n  if (gradeLevel \u003d\u003d \"K\") {\n    gradeLevelTemp2 \u003d 0;\n  }\n\n  let gradeLevelTeacherFolderIdArr \u003d createGradeLevelTeacherFolderIdArr();\n  let folderIdForGradeLevel \u003d gradeLevelTeacherFolderIdArr[gradeLevelTemp2];\n  var buildingIdArr \u003d createBuildingIdArr(DriveApp.getFolderById(folderIdForGradeLevel));\n\n  let orderFormsItemsQuantityNeededArr \u003d [];\n  let orderFormsItemNumberArr \u003d [];\n  let orderFormsQuantityNeededArr \u003d [];\n\n  for (let b \u003d 0; b \u003c (buildingIdArr.length); b++) {\n\n    let ss \u003d SpreadsheetApp.openById(buildingIdArr[b]);\n    Logger.log(\"*********************************************************************\");\n    Logger.log(\"Getting Quantity Needed for building: \" + ss.getName());\n    Logger.log(\"*********************************************************************\");\n    let sheets \u003d ss.getSheets();\n\n    for (let i \u003d 1; i \u003c (sheets.length); i++) {\n      let activeSheet \u003d sheets[i];\n      data \u003d activeSheet.getDataRange();\n      values \u003d data.getValues();\n      Logger.log(\"values: \" + values);\n      for (j \u003d 6; j \u003c values.length; j++) {\n        if (values[j][4] !\u003d \"\") {\n          orderFormsItemNumberArr.push(values[j][0]);\n          orderFormsQuantityNeededArr.push(values[j][4]);\n        }\n      }\n    }\n\n  }\n\n  orderFormsItemsQuantityNeededArr.push(orderFormsItemNumberArr);\n  orderFormsItemsQuantityNeededArr.push(orderFormsQuantityNeededArr);\n  // Logger.log(\"orderFormsItemNumberArr: \" + orderFormsItemNumberArr);\n  // Logger.log(\"orderFormsItemsQuantityNeededArr: \" + orderFormsItemsQuantityNeededArr);\n\n  return (orderFormsItemsQuantityNeededArr);\n} // end of function"}]}